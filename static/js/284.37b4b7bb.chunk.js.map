{"version":3,"file":"static/js/284.37b4b7bb.chunk.js","mappings":"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","sources":["components/AnimatedBackGround.jsx","../node_modules/@mui/icons-material/esm/FavoriteBorder.js","../node_modules/@mui/icons-material/esm/Favorite.js","components/MoviePosterHeader.jsx","pages/MoviePage.jsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\n\r\nconst AnimatedBackGround = ({ imageUrl }) => {\r\n  const containerVariants = {\r\n    animate: {\r\n      scale: [1, 1.05, 1],\r\n      rotate: [0, 0.5, 0],\r\n      transition: {\r\n        duration: 10,\r\n        repeat: Infinity,\r\n        ease: \"easeInOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"absolute inset-0 overflow-hidden rounded-b-lg\">\r\n      <motion.div\r\n        className=\"w-full h-full bg-cover bg-center\"\r\n        style={{ backgroundImage: `url(${imageUrl})` }}\r\n        variants={containerVariants}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n      />\r\n      <div className=\"absolute inset-0 backdrop-blur-md bg-black bg-opacity-30\"></div>\r\n      <div className=\"absolute inset-x-0 bottom-0 h-1/2 bg-gradient-to-t from-gray-50 to-transparent\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimatedBackGround;\r\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3m-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05\"\n}), 'FavoriteBorder');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54z\"\n}), 'Favorite');","import AnimatedBackGround from \"./AnimatedBackGround\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport { useState } from \"react\";\r\n\r\nconst MoviePosterHeader = ({\r\n  posterUrl,\r\n  title,\r\n  year,\r\n  rating,\r\n  duration,\r\n  ageRestriction,\r\n  country,\r\n}) => {\r\n  const [liked, setLiked] = useState(false);\r\n  return (\r\n    <div\r\n      className=\"relative w-full overflow-hidden rounded-b-lg\r\n                   min-h-[50vh] max-h-[70vh] sm:min-h-[45vh] sm:max-h-[60vh] md:min-h-[40vh] md:max-h-[55vh] lg:min-h-[35vh] lg:max-h-[50vh]\r\n                   flex flex-col justify-end\"\r\n    >\r\n      <AnimatedBackGround imageUrl={posterUrl} />\r\n\r\n      <div className=\"absolute inset-0 p-4 sm:p-6 md:p-8 flex flex-col justify-end text-white z-10\">\r\n        <div className=\"flex flex-col md:flex-row items-center md:items-end md:justify-start md:gap-x-6\">\r\n          <img\r\n            src={posterUrl}\r\n            className=\"w-36 h-auto mb-5 md:mb-0 md:w-48 lg:w-56 rounded-md shadow-lg\"\r\n            alt={title}\r\n          />\r\n          <div className=\"flex flex-col items-center md:items-start text-center md:text-left\">\r\n            <div className=\"flex items-center gap-x-2 text-sm sm:text-base font-semibold mb-2\">\r\n              <span className=\"bg-yellow-500 text-white px-2 py-0.5 rounded-md\">\r\n                IMDb {rating}\r\n              </span>\r\n              <span>{ageRestriction}</span>\r\n              <span>{duration}</span>\r\n              <span>{country}</span>\r\n            </div>\r\n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl font-extrabold leading-tight mb-2 sm:mb-3\">\r\n              {title}\r\n            </h1>\r\n            <p className=\"text-lg sm:text-xl md:text-2xl text-gray-100\">\r\n              {year}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"absolute top-4 right-4 sm:top-6 sm:right-6 md:top-8 md:right-8 bg-white hover:bg-slate-200 text-white text-sm sm:text-base py-2 px-3 sm:px-4 rounded-full shadow-md transition duration-300\">\r\n          {liked ? (\r\n            <FavoriteIcon className=\"text-red-600\" onClick={() => setLiked(false)} />\r\n          ) : ( \r\n            <FavoriteBorderIcon className=\"text-red-600\" onClick={() => setLiked(true)} />\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePosterHeader;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MoviePosterHeader from \"../components/MoviePosterHeader\";\r\nimport PageLoader from \"../components/PageLoader\";\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconst baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nconst MoviePage = () => {\r\n  const params = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    const url = `${baseUrl}?apikey=${apiKey}&i=${params.id}&plot=full`;\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.Response === \"True\") {\r\n        setMovie(data);\r\n      } else {\r\n        setError(data.Error || \"Movie not found\");\r\n        setMovie(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Something went wrong while fetching the movie data.\");\r\n      setMovie(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [params.id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <PageLoader />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center text-red-600 text-xl\">{error}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!movie) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center text-gray-500 text-xl\">\r\n          Movie Not Found!\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <MoviePosterHeader\r\n        posterUrl={movie.Poster}\r\n        title={movie.Title}\r\n        year={movie.Year}\r\n        rating={movie.imdbRating}\r\n        duration={movie.Runtime}\r\n        ageRestriction={movie.Rated}\r\n        country={movie.Country}\r\n      />\r\n      <div className=\"max-w-4xl mx-auto px-4 mt-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Plot</h2>\r\n        <p className=\"text-gray-700 leading-relaxed mb-6\">{movie.Plot}</p>\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Actors</h2>\r\n        <div className=\"flex flex-wrap gap-4 mb-6\">\r\n          {movie.Actors &&\r\n            movie.Actors.split(\", \").map((actor, index) => (\r\n              <span\r\n                key={index}\r\n                className=\"bg-gray-200 px-4 py-2 rounded-full text-gray-700\"\r\n              >\r\n                {actor}\r\n              </span>\r\n            ))}\r\n        </div>\r\n        <p className=\"text-gray-700 mb-6\">Writer: {movie.Writer}</p>\r\n        <p className=\"text-gray-700 mb-6\">Director: {movie.Director}</p>\r\n\r\n        <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Watch</h2>\r\n        <button className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-3 rounded-lg transition duration-300 mb-6\">\r\n          Choose\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"names":["_ref","imageUrl","containerVariants","animate","scale","rotate","transition","duration","repeat","Infinity","ease","_jsxs","className","children","_jsx","motion","div","style","backgroundImage","variants","initial","createSvgIcon","d","posterUrl","title","year","rating","ageRestriction","country","liked","setLiked","useState","AnimatedBackGround","src","alt","FavoriteIcon","onClick","FavoriteBorderIcon","MoviePage","params","useParams","movie","setMovie","loading","setLoading","error","setError","useEffect","async","url","id","response","fetch","ok","Error","status","data","json","Response","err","console","fetchData","PageLoader","MoviePosterHeader","Poster","Title","Year","imdbRating","Runtime","Rated","Country","Plot","Actors","split","map","actor","index","Writer","Director"],"sourceRoot":""}